#zmodload zsh/zprof

# Highlights
unset ZSH_AUTOSUGGEST_USE_ASYNC
functions -c _atuin_search _atuin_search_orig
function _atuin_search(){
    _zsh_autosuggest_clear
    _atuin_search_orig "$@"
    _zsh_autosuggest_fetch
}

# ZLE Bindings
[[ -r ~/.zsh_zle ]] && source ~/.zsh_zle

# Load add-zsh-hook
autoload -Uz add-zsh-hook
function zellij_rename_tab_on_cd() {
    [ -n "$ZELLIJ" ] && zsh-defer zellij action rename-tab "${PWD//${HOME}/~}"
}
add-zsh-hook chpwd zellij_rename_tab_on_cd
# Call it immediately
zellij_rename_tab_on_cd

# Additional files to source
[[ -r ~/.zsh_functions ]] && source ~/.zsh_functions
export GPG_TTY=$(tty)

## Colored man pages (color codes uses OMZL::spectrum)
# bold text: red
less_termcap[md]="$(print -P -- ${FX[bold]}${FG[009]})"
# blink text: yellow
less_termcap[mb]="$(print -P -- ${FX[blink]}${FG[226]})"
# underlined text: orange
less_termcap[us]="$(print -P -- ${FX[underline]}${FG[208]})"
# reset
less_termcap[me]="$(print -P -- ${FX[reset]})"
less_termcap[ue]="$(print -P -- ${FX[reset]})"

# fzf-tab previews
FTB_FZF_PREVIEW='if [ -d "$word" ]; then ls -1 --color=always "$realpath"; elif [ -f "$word" ]; then bat --color=always --style=numbers --line-range=:1000 "$word"; else echo $desc | tr -s " "; fi'

zstyle ':fzf-tab:complete:(vi|vim|ls|bat|cat|exa):argument-rest' fzf-preview "$FTB_FZF_PREVIEW"
zstyle ':fzf-tab:complete:cd:*' fzf-preview "$FTB_FZF_PREVIEW"

# Comments in shell
setopt interactivecomments

# Include dotfiles in completion
setopt globdots

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
# [[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
#zprof
